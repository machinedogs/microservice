continue
ontinue
continue
user
quit
params
http_auth_header
user
quit
http_auth_header
user
quit
user
quit
http_auth_header
user
quit
continue
Host.all
continue
Host.create!(host_params)
quit
Host.all
Host.create!(params[:registration])
quit
params
super
quit
Host.all
quit
Host.all
quit
AuthenticateUser.call(params[:email], params[:password])
Host.all
quit
Host.all
AuthenticateUser.call(params[:email], params[:password])
quit
Host.all
AuthenticateUser.call(params[:email], params[:password])
continue
quit
http://localhost:3000/api/v1/events
continue
AuthorizeApiRequest.call(request.headers).result
quit
y
quit
decoded_auth_token
continue
AuthorizeApiRequest.call(request.headers).result
quit
request.headers['auth']
request.headers
continue
headers
request.headers['auth_token']
request.headers
params
parans
continue
headers['auth_token'].present?
headers['Authorization']
headers
params
http_auth_header
decoded_auth_token
continue
AuthorizeApiRequest.call(request.headers).result
quit
AuthorizeApiRequest.call(request.headers).result
continue
secret_key
continue
self.secret_key
self
secret_key
continue
user&.password == password
user.password
user = User.find_by_email(email)
user
continue
email
password
continue
password
email
